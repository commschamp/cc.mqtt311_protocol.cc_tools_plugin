// Generated by commsdsl2tools_qt v6.3.0

#include "Connack.h"

#include "cc_tools_qt/property/field.h"
#include "cc_tools_qt_plugin/cc_mqtt311/options/DefaultOptions.h"

namespace cc_tools_qt_plugin
{

namespace cc_mqtt311
{

namespace message
{

namespace
{

static QVariantMap createProps_flags(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_mqtt311::message::ConnackFields<cc_tools_qt_plugin::cc_mqtt311::options::DefaultOptions>::Flags;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .add(0U, "Session Present")
            .asMap();
}

static QVariantMap createProps_returnCode(bool serHidden)
{
    static_cast<void>(serHidden);
    using Field = ::cc_mqtt311::message::ConnackFields<cc_tools_qt_plugin::cc_mqtt311::options::DefaultOptions>::ReturnCode;
    return
        cc_tools_qt::property::field::ForField<Field>()
            .name(Field::name())
            .serialisedHidden(serHidden)
            .add("Accepted", 0)
            .add("Bad Protocol Version", 1)
            .add("Identifier Rejected", 2)
            .add("Server Unavailable", 3)
            .add("Bad Auth Details", 4)
            .add("Not Authorized", 5)
            .asMap();
}

QVariantList createProps()
{
    QVariantList props;
    props.append(createProps_flags(false));
    props.append(createProps_returnCode(false));
    return props;
}

} // namespace

Connack::Connack() = default;
Connack::~Connack() = default;
Connack& Connack::operator=(const Connack&) = default;
Connack& Connack::operator=(Connack&&) = default;

const QVariantList& Connack::fieldsPropertiesImpl() const
{
    static const QVariantList Props = createProps();
    return Props;
}

} // namespace message

} // namespace cc_mqtt311

} // namespace cc_tools_qt_plugin
